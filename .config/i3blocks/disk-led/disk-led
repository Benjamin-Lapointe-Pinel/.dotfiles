#!/usr/bin/env bash

dt="${DT:-1}"
regex="${REGEX:-$BLOCK_INSTANCE}"
regex="${regex:-/^(s|h)d[a-zA-Z]+/}"
threshold="${THRESHOLD:-0}"
sep="${SEPARATOR:-" "}"

function list_devices {
    echo "Devices iostat reports that match our regex:"
    iostat | awk '$1~/^(s|h)d[a-zA-Z]+/{print $1}'
}

while getopts t:R:s:lh opt; do
    case "$opt" in
        t) dt="$OPTARG" ;;
        R) regex="$OPTARG" ;;
        s) sep="$OPTARG" ;;
        l) list_devices; exit 0 ;;
        h) printf \
"Usage: disk-io [-t time] [-R regex] [-l] [-h]
Options:
-t\tTime interval in seconds between measurements. Default: $dt
-R\tRegex that devices must match. Default: $regex
-l\tList devices that iostat reports
-h\tShow this help text
" && exit 0;;
    esac
done

iostat -dyz "$dt" | awk -v sep="$sep" "
    BEGIN {
        rx = wx = 0;
    }
    {
        if(\$0 == \"\") {
            if ($threshold > 0 && (rx >= $threshold || wx >= $threshold)) {
                printf \"<span color='$warn_color'>\";
            }
            if(!$kB_only && ($MB_only || rx >= 1024 || wx >= 1024)) {
							  unit = \"M$unit_suffix\";
                rxf = sprintf(\"%${width}.${MB_precision}f\", rx / 1024);
                txf = sprintf(\"%${width}.${MB_precision}f\", tx / 1024);
            }
            else {
							  unit = \"k$unit_suffix\";
                rxf = sprintf(\"%${width}.${kB_precision}f\", rx);
                txf = sprintf(\"%${width}.${kB_precision}f\", tx);
            }
					  gsub(\" \", \"‧\", rxf);
					  gsub(\" \", \"‧\", txf);
            printf \"$inlabel%s %s$sep$outlabel%s %s\", rxf, unit, txf, unit;
            if ($threshold > 0 && (rx >= $threshold || wx >= $threshold)) {
                printf \"</span>\";
            }
            printf \"\n\";
            fflush(stdout);
        }
        else if(\$1~/^Device:?/) {
            rx = wx = 0;
        }
        else if(\$1~$regex) {
            rx += \$3;
            wx += \$4;
        }
    }"
