set nocompatible
set t_Co=256
set hidden
set encoding=UTF-8
set clipboard^=unnamed,unnamedplus

" WSL yank support
let s:clip = 'clip.exe'
if executable(s:clip)
  augroup WSLYank
    autocmd!
    autocmd TextYankPost * if v:event.operator ==# 'y' | call system('cat |' . s:clip, @0) | endif
  augroup END
endif

let textwidth=160
let &textwidth=textwidth

set statusline=%f\ %h%w%m%r\ %=%(%l:%c\ %=\ %P%)

set linebreak
set breakindent
set breakindentopt+=shift:-2
set showbreak=├\ 
set listchars=space:.,tab:->,nbsp:█,trail:█,eol:$,precedes:<,extends:>

set smartindent
set shiftwidth=2
set tabstop=2
set softtabstop=2
set smarttab
set expandtab

set number relativenumber
set showmatch
set showcmd
set signcolumn=yes

set wildmenu
set wildmode=longest:full,full
set completeopt+=noinsert,menuone,preview

set splitbelow
set splitright

set foldmethod=syntax
set nofoldenable
set foldlevel=1
set viewoptions+=localoptions

set complete+=k
set colorcolumn=0
set undofile
set nomore

set mouse=a
augroup no_cursor_move_on_focus
	au!
	au FocusLost * let g:oldmouse=&mouse | set mouse=
	au FocusGained * if exists('g:oldmouse') | let &mouse=g:oldmouse | unlet g:oldmouse | endif
augroup END

filetype plugin indent on
syntax on

highlight clear SpellBad
highlight SpellBad cterm=underline ctermfg=red
highlight clear SpellCap
highlight SpellCap cterm=underline ctermfg=red
highlight clear SpellRare
highlight SpellRare cterm=underline ctermfg=green
highlight clear SpellLocal
highlight SpellLocal cterm=underline ctermfg=blue
highlight Pmenu ctermbg=gray
highlight ColorColumn ctermbg=18
highlight IndentBlanklineChar ctermfg=19

" navigate windows from any mode
tnoremap <M-h> <C-\><C-N><C-w>h
tnoremap <M-j> <C-\><C-N><C-w>j
tnoremap <M-k> <C-\><C-N><C-w>k
tnoremap <M-l> <C-\><C-N><C-w>l
inoremap <M-h> <C-\><C-N><C-w>h
inoremap <M-j> <C-\><C-N><C-w>j
inoremap <M-k> <C-\><C-N><C-w>k
inoremap <M-l> <C-\><C-N><C-w>l
nnoremap <M-h> <C-w>h
nnoremap <M-j> <C-w>j
nnoremap <M-k> <C-w>k
nnoremap <M-l> <C-w>l
tnoremap <M-left>  <C-\><C-N><C-w>h
tnoremap <M-down>  <C-\><C-N><C-w>j
tnoremap <M-up>    <C-\><C-N><C-w>k
tnoremap <M-right> <C-\><C-N><C-w>l
inoremap <M-left>  <C-\><C-N><C-w>h
inoremap <M-down>  <C-\><C-N><C-w>j
inoremap <M-up>    <C-\><C-N><C-w>k
inoremap <M-right> <C-\><C-N><C-w>l
nnoremap <M-left>  <C-w>h
nnoremap <M-down>  <C-w>j
nnoremap <M-up>    <C-w>k
nnoremap <M-right> <C-w>l

" terminal
tnoremap <Esc> <C-\><C-n>
nnoremap <C-\> :vertical terminal<CR>
tnoremap <C-\> exit<CR>

" miscellaneous
nnoremap gb :ls<CR>:b 
nnoremap gB :Buffers<CR>
nnoremap <C-space> :set list! list?<CR>
nnoremap <F5> :w<CR>:!%:p<CR>
nnoremap <C-s> :setlocal spell!<CR>
inoremap <c-space> <c-n>
" https://stackoverflow.com/a/1037182
nnoremap <silent> <esc> :noh<return><esc>
nnoremap <esc>^[ <esc>^[

" file explorer
let g:netrw_liststyle = 3
let g:netrw_banner = 0
map <C-E> :Lexplore<CR>

augroup auto_save_view
	autocmd!
	autocmd BufWinLeave * set spellfile& " needed for spellcheck to work with view
	autocmd BufWinLeave * silent! mkview
	autocmd BufWinEnter * silent! loadview
augroup END

autocmd BufNewFile,BufRead *.ino set filetype=arduino
autocmd BufNewFile,BufRead docker-compose.{yaml,yml} set filetype=docker-compose
autocmd BufRead,BufNewFile *.md set filetype=markdown

autocmd FileType tex,plaintex,gitcommit,markdown setlocal spell
autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab
autocmd FileType python compiler pylint
autocmd FileType python nnoremap <buffer> <F4> :w<CR>:make %<CR>
autocmd FileType tex,plaintex nnoremap <F4> :w<CR>:VimtexCompile<CR>
autocmd FileType dockerfile nnoremap <buffer> <F4> :wa<CR>:!docker build -t build . && docker run --rm -it $(docker build -q .)<CR>
autocmd FileType docker-compose nnoremap <buffer> <F4> :wa<CR>:!docker-compose down; docker-compose up -d<CR>
autocmd FileType arduino nnoremap <buffer> <F4> :wa<CR>:!arduino -v --upload %<CR>
autocmd FileType java match ColorColumn /\%160v/

" https://vim.fandom.com/wiki/Automatically_open_the_quickfix_window_on_:make
autocmd QuickFixCmdPost [^l]* nested cwindow
autocmd QuickFixCmdPost    l* nested lwindow

let g:indentLine_char = '│'
let g:indentLine_setConceal = 0

packadd termdebug
let g:termdebug_wide = 1

let g:vimtex_view_method = 'zathura'
let g:vimtex_syntax_conceal_disable = 1

set rtp+=/usr/bin/fzf

" These lines must be at the very end of the vimrc file.
" packloadall breaks nvim plugin loading
" packloadall
silent! helptags ALL
